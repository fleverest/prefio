% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preferences.R
\name{preferences}
\alias{preferences}
\alias{long_preferences}
\alias{format.preferences}
\title{Preferences Objects}
\usage{
long_preferences(
  data,
  col,
  id_cols = NULL,
  rank_col = NULL,
  item_col = NULL,
  item_names = NULL,
  verbose = TRUE,
  unused_fn = NULL,
  ...
)

\method{format}{preferences}(x, ...)
}
\arguments{
\item{data}{A \code{data.frame} or \code{tibble} to extract preferences from}

\item{col}{The name of the new column, as a string or symbol.}

\item{id_cols}{<\code{\link[=dplyr_tidy_select]{tidy-select}}> The columns by which to
group the dataset to extract a single preference selection.}

\item{rank_col}{<\code{\link[=dplyr_tidy_select]{tidy-select}}> For \code{data} in
long-format: the column representing the rank for the associated item.}

\item{item_col}{<\code{\link[=dplyr_tidy_select]{tidy-select}}> For \code{data} in
long-format: the column representing the items by name or by index, in which
case the \code{item_names} parameter should also be passed.}

\item{item_names}{The names of the full set of items. This is necessary when
the dataset specifies items by index rather than by name, or when there are
items which do not appear in any preference selection.}

\item{verbose}{If \code{TRUE}, diagnostic messages will be sent to stdout.}

\item{unused_fn}{When \code{format="long"}, passes parameter to
\code{dplyr::pivot_wider} to summarise values from unused columns. This can be
helpful to keep covariates from columns which are unused in processing
preferences, but are important for upstream modelling. See
<\code{\link{pivot_wider}}> for more details.}

\item{...}{Unused.}

\item{format}{The format of the data: one of "ordering", "ranking", or
"long" (see above). By default, \code{data} is assumed to be in "long" format.}

\item{frequency_col}{<\code{\link[=dplyr_tidy_select]{tidy-select}}> Optionally, for
\code{data} in ordering or ranking formats: column representing the frequency of
occurance for the associated preference selection.}
}
\description{
A tidy interface for working with ordinal preferences.
}
\examples{
# Votes cast by two animals ranking a variety of fruits and vegetables.
# This is not real data, I made this up.
x <- tribble(
  ~voter_id, ~species, ~food, ~ranking,
  1, "Rabbit", "Apple", 1,
  1, "Rabbit", "Banana", 2,
  1, "Rabbit", "Carrot", 3,
  2, "Monkey", "Banana", 1,
  2, "Monkey", "Apple", 2,
  2, "Monkey", "Carrot", 3
)
# Process preferencial data into a single column.
x |>
  long_preferences(food_preference,
    id_cols = voter_id,
    item_col = fruit,
    rank_col = ranking
  )
# The same, but keep the species data.
x |>
  long_preferences(food_preference,
    id_cols = voter_id,
    item_col = fruit,
    rank_col = ranking,
    unused_col = list(species = first)
  )
}
